//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MenuEntity {

    static readonly Sources.Components.UI.Menu.RefreshComponent refreshComponent = new Sources.Components.UI.Menu.RefreshComponent();

    public bool isRefresh {
        get { return HasComponent(MenuComponentsLookup.Refresh); }
        set {
            if (value != isRefresh) {
                var index = MenuComponentsLookup.Refresh;
                if (value) {
                    var componentPool = GetComponentPool(index);
                    var component = componentPool.Count > 0
                            ? componentPool.Pop()
                            : refreshComponent;

                    AddComponent(index, component);
                } else {
                    RemoveComponent(index);
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class MenuMatcher {

    static Entitas.IMatcher<MenuEntity> _matcherRefresh;

    public static Entitas.IMatcher<MenuEntity> Refresh {
        get {
            if (_matcherRefresh == null) {
                var matcher = (Entitas.Matcher<MenuEntity>)Entitas.Matcher<MenuEntity>.AllOf(MenuComponentsLookup.Refresh);
                matcher.componentNames = MenuComponentsLookup.componentNames;
                _matcherRefresh = matcher;
            }

            return _matcherRefresh;
        }
    }
}
