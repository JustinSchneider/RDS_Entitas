//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ContextsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class Contexts : Entitas.IContexts {

    public static Contexts sharedInstance {
        get {
            if (_sharedInstance == null) {
                _sharedInstance = new Contexts();
            }

            return _sharedInstance;
        }
        set { _sharedInstance = value; }
    }

    static Contexts _sharedInstance;

    public GameContext game { get; set; }
    public InputContext input { get; set; }
    public MenuContext menu { get; set; }
    public MetaContext meta { get; set; }
    public UiContext ui { get; set; }

    public Entitas.IContext[] allContexts { get { return new Entitas.IContext [] { game, input, menu, meta, ui }; } }

    public Contexts() {
        game = new GameContext();
        input = new InputContext();
        menu = new MenuContext();
        meta = new MetaContext();
        ui = new UiContext();

        var postConstructors = System.Linq.Enumerable.Where(
            GetType().GetMethods(),
            method => System.Attribute.IsDefined(method, typeof(Entitas.CodeGeneration.Attributes.PostConstructorAttribute))
        );

        foreach (var postConstructor in postConstructors) {
            postConstructor.Invoke(this, null);
        }
    }

    public void Reset() {
        var contexts = allContexts;
        for (int i = 0; i < contexts.Length; i++) {
            contexts[i].Reset();
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EntityIndexGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class Contexts {

    public const string LayerType = "LayerType";
    public const string Menu = "Menu";
    public const string MenuAddress = "MenuAddress";
    public const string MenuId = "MenuId";
    public const string MenuType = "MenuType";

    [Entitas.CodeGeneration.Attributes.PostConstructor]
    public void InitializeEntityIndices() {
        ui.AddEntityIndex(new Entitas.PrimaryEntityIndex<UiEntity, Sources.Constants.UIConstants.Layer>(
            LayerType,
            ui.GetGroup(UiMatcher.LayerType),
            (e, c) => ((Sources.Components.UI.LayerTypeComponent)c).Value));

        menu.AddEntityIndex(new Entitas.PrimaryEntityIndex<MenuEntity, Sources.UI.Framework.Menus.Interfaces.IMenuElement>(
            Menu,
            menu.GetGroup(MenuMatcher.Menu),
            (e, c) => ((MenuComponent)c).Value));

        menu.AddEntityIndex(new Entitas.PrimaryEntityIndex<MenuEntity, string>(
            MenuAddress,
            menu.GetGroup(MenuMatcher.MenuAddress),
            (e, c) => ((MenuAddressComponent)c).Value));

        ui.AddEntityIndex(new Entitas.PrimaryEntityIndex<UiEntity, string>(
            MenuId,
            ui.GetGroup(UiMatcher.MenuId),
            (e, c) => ((MenuIdComponent)c).Value));

        menu.AddEntityIndex(new Entitas.PrimaryEntityIndex<MenuEntity, Sources.Constants.UIConstants.Menu>(
            MenuType,
            menu.GetGroup(MenuMatcher.MenuType),
            (e, c) => ((MenuTypeComponent)c).Value));
    }
}

public static class ContextsExtensions {

    public static UiEntity GetEntityWithLayerType(this UiContext context, Sources.Constants.UIConstants.Layer Value) {
        return ((Entitas.PrimaryEntityIndex<UiEntity, Sources.Constants.UIConstants.Layer>)context.GetEntityIndex(Contexts.LayerType)).GetEntity(Value);
    }

    public static MenuEntity GetEntityWithMenu(this MenuContext context, Sources.UI.Framework.Menus.Interfaces.IMenuElement Value) {
        return ((Entitas.PrimaryEntityIndex<MenuEntity, Sources.UI.Framework.Menus.Interfaces.IMenuElement>)context.GetEntityIndex(Contexts.Menu)).GetEntity(Value);
    }

    public static MenuEntity GetEntityWithMenuAddress(this MenuContext context, string Value) {
        return ((Entitas.PrimaryEntityIndex<MenuEntity, string>)context.GetEntityIndex(Contexts.MenuAddress)).GetEntity(Value);
    }

    public static UiEntity GetEntityWithMenuId(this UiContext context, string Value) {
        return ((Entitas.PrimaryEntityIndex<UiEntity, string>)context.GetEntityIndex(Contexts.MenuId)).GetEntity(Value);
    }

    public static MenuEntity GetEntityWithMenuType(this MenuContext context, Sources.Constants.UIConstants.Menu Value) {
        return ((Entitas.PrimaryEntityIndex<MenuEntity, Sources.Constants.UIConstants.Menu>)context.GetEntityIndex(Contexts.MenuType)).GetEntity(Value);
    }
}
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.VisualDebugging.CodeGeneration.Plugins.ContextObserverGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class Contexts {

#if (!ENTITAS_DISABLE_VISUAL_DEBUGGING && UNITY_EDITOR)

    [Entitas.CodeGeneration.Attributes.PostConstructor]
    public void InitializeContextObservers() {
        try {
            CreateContextObserver(game);
            CreateContextObserver(input);
            CreateContextObserver(menu);
            CreateContextObserver(meta);
            CreateContextObserver(ui);
        } catch(System.Exception) {
        }
    }

    public void CreateContextObserver(Entitas.IContext context) {
        if (UnityEngine.Application.isPlaying) {
            var observer = new Entitas.VisualDebugging.Unity.ContextObserver(context);
            UnityEngine.Object.DontDestroyOnLoad(observer.gameObject);
        }
    }

#endif
}
