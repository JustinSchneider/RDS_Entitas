//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaContext {

    public MetaEntity interactionModeEntity { get { return GetGroup(MetaMatcher.InteractionMode).GetSingleEntity(); } }
    public InteractionModeComponent interactionMode { get { return interactionModeEntity.interactionMode; } }
    public bool hasInteractionMode { get { return interactionModeEntity != null; } }

    public MetaEntity SetInteractionMode(Sources.Constants.ProjectConstants.InteractionMode newValue) {
        if (hasInteractionMode) {
            throw new Entitas.EntitasException("Could not set InteractionMode!\n" + this + " already has an entity with InteractionModeComponent!",
                "You should check if the context already has a interactionModeEntity before setting it or use context.ReplaceInteractionMode().");
        }
        var entity = CreateEntity();
        entity.AddInteractionMode(newValue);
        return entity;
    }

    public void ReplaceInteractionMode(Sources.Constants.ProjectConstants.InteractionMode newValue) {
        var entity = interactionModeEntity;
        if (entity == null) {
            entity = SetInteractionMode(newValue);
        } else {
            entity.ReplaceInteractionMode(newValue);
        }
    }

    public void RemoveInteractionMode() {
        interactionModeEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaEntity {

    public InteractionModeComponent interactionMode { get { return (InteractionModeComponent)GetComponent(MetaComponentsLookup.InteractionMode); } }
    public bool hasInteractionMode { get { return HasComponent(MetaComponentsLookup.InteractionMode); } }

    public void AddInteractionMode(Sources.Constants.ProjectConstants.InteractionMode newValue) {
        var index = MetaComponentsLookup.InteractionMode;
        var component = (InteractionModeComponent)CreateComponent(index, typeof(InteractionModeComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceInteractionMode(Sources.Constants.ProjectConstants.InteractionMode newValue) {
        var index = MetaComponentsLookup.InteractionMode;
        var component = (InteractionModeComponent)CreateComponent(index, typeof(InteractionModeComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveInteractionMode() {
        RemoveComponent(MetaComponentsLookup.InteractionMode);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class MetaMatcher {

    static Entitas.IMatcher<MetaEntity> _matcherInteractionMode;

    public static Entitas.IMatcher<MetaEntity> InteractionMode {
        get {
            if (_matcherInteractionMode == null) {
                var matcher = (Entitas.Matcher<MetaEntity>)Entitas.Matcher<MetaEntity>.AllOf(MetaComponentsLookup.InteractionMode);
                matcher.componentNames = MetaComponentsLookup.componentNames;
                _matcherInteractionMode = matcher;
            }

            return _matcherInteractionMode;
        }
    }
}
